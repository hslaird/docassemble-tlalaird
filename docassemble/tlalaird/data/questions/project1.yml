#ASSIGNMENT 6 SEE SYLLABUS -- https://github.com/Gauntlet173/CodingTheLaw/blob/Fall2020/syllabus.md 
#go here if you don't understand TLA 4 - https://docassemble.org/docs/logic.html#howitworks
#when you are done go to packages, ensure project1 is still tagged, save again and then "Github" it. On github you go into docassemble-tlalaird/docassemble/tlalaird/data/questions/ to check if it worked. 
#question and subquestion are more like "title" and body of a page.
#check out community.lawyer for code to copy. within docassemble documentation check out recipes
#MAKE SURE ATTACHMENT DOES NOT NEED THE RESPONSE FROM THE REVIEWER!!! MAYBE add if reviewer email sent BUT DON'T TRIGGER ITand role is client?? OR MAYBE MAKE A NEW QUESTION BLOCK?
objects:
  - user: Individual
  - user.annoincome: Value
  - user.mensisincome: Value
  - user.assets: Value
  - cohabs: DAList.using(object_type=Individual, complete_attribute="complete")
  - cohabs[i].annoincome: Value
  - cohabs[i].mensisincome: Value
  - cohabs[i].assets: Value
---
default role: client
code: |
  multi_user = True
  reviewer_email = "hslaird@ualberta.ca"
  client_email = "laird.heather@gmail.com"
  role = 'client'
  if user_logged_in() and user_info().email == reviewer_email:
    role = 'reviewer'
---
mandatory: true
code: |

  qualifies

---
mandatory: true
question: |
  Hello, ${ user }! 
   
attachments: 
  - name: Legal Aid Memo.
    description: |
      A Memo For You!
    content: |
      Memo re: Qualification for Legal Aid.
    
      
      Your name is ${ user }.
      Your email is ${ client_email }.
      % if user.assets.exists:
      You indicated that you have assets.
      % endif
      % if user.annoincome.exists:
      You made ${ currency(user.annoincome) } last year.
      % endif
      % if user.mensisincome.exists:
      You made ${ currency(user.mensisincome) } last month.
      % endif
      
      % if len(cohabs) > 0: 
      
      % for j in cohabs: 
      
      You know about ${ j }. I asked if you share income with ${ j } and you said
      % if j.cohabs_share: 
      yes.
      % else: 
      no.
      % endif
      % if j.assets.exists:
      You indicated that ${ j } has assets.
      % endif
      % if j.annoincome.exists:
      ${ j } made ${ currency(j.annoincome.value) } last year.
      % endif
      % if j.mensisincome.exists:
      ${ j } made ${ currency(j.mensisincome.value) } last month.
      % endif
      
      % endfor
      
      For last year, the total income of all of the cohabitants is ${ currency(total_annoincome) }.
      
      For last month, the total income of all of the cohabitants is ${ currency(total_mensisincome) }.
      % endif
      
      % if actually_qualifies:
      It appears that based on the combination of your profile and finances, you qualify for Legal Aid.
      % else:
      It appears that based on the combination of your profile and finances, you do not qualify for Legal Aid.
      % endif
  
      % if qualifies:
      Based on your profile, you appear to qualify for Legal Aid. 
      % else:
      Based on your profile, you do not qualify for Legal Aid.
      % endif
      
      % if high_total_income:
      You do not financially qualify for Legal Aid. 
      % elif medium_total_income:
      You marginally financially qualify for Legal Aid.
      % else:
      You appear to financially qualify for Legal Aid.
      % endif
      
      % if appeal:
      Your legal matter is an appeal of a matter for which you received LAA assistance.
      % else:
      Your legal matter is not an appeal of a matter for which you received LAA assistance.
      % endif
      
      % if defined('lives_in_AB'):
      I asked if you live in Alberta. You said ${ lives_in_AB }.
      % endif
      
      % if defined('has_lawyer'):
      I asked if you have a lawyer. You said ${ has_lawyer }.
      % endif
      
      % if defined('has_acting_lawyer'):
      I asked if this lawyer is still acting for you. You said ${ has_acting_lawyer }.
      % endif
      
      % if defined('can_afford_lawyer'):
      I asked if you can afford a lawyer. You said ${ can_afford_lawyer }.
      % endif
      
      % if defined('matter_in_AB'):
      I asked if your legal matter is in Alberta. You said ${ matter_in_AB }.
      % endif
      
      % if defined('matter_is_family'):
      I asked if your matter is a family law matter. You said ${ matter_is_family }.
      % endif
      
      % if defined('matter_is_criminal'):
      I asked if your matter is a criminal law matter. You said ${ matter_is_criminal }.
      % endif
            
      Your signature ${ user.signature }
      
      Signed on ${ format_date(sig_date, format='EEEE, MMMM d, yyyy') } (${ format_date(sig_date, format="yyyy-MM-dd") })).  
      
      % if reviewer_response:
      REVIEWER GAVE YES RESPONSE
      % else:
      ALAS REVIEWER SAID DO NOT PASS GO DO NOT COLLECT LEGAL AID. 
      % endif
---
generic object: Individual
question: | 
  What is ${ x.object_possessive('name') }?
fields:
  - First Name: x.name.first
  - Last Name: x.name.last
---
question: |
  E-mail test
subquestion: |
  This interview will send you an e-mail.
field: intro_provided
---
code: |
  email_sent_ok = send_email(to=reviewer_email, template=reviewer_notification)
---
code: |
  client_email_sent_ok = send_email(to=client_email, template=client_notification)
---
template: client_notification
subject: |
  This is for the client!
content: |
  This email is for the client! Your reviewer did the thing. So now click [HERE](${ interview_url() }) to view the interview and find out the magic results.
---
template: reviewer_notification
subject: |
  LAW589 Assignment 6 Wassup Reviewer!
content: |
  Hello! It's your lucky day, you get to pretend you're a legal aid reviewer. Wowee. Someone FAKE AND NOT REAL made a request, click [HERE](${ interview_url() }) to review the document and respond. Please be nice even though this is all fake. Thanks!
---
event: role_event
question: You Are Waiting on a Response from another User
subquestion: |
  OK, now we wait for the other party to check their email!
  % if 'client' in role_needed:
  We are waiting for the client, and you are a reviewer. Was the email to the client sent OK? Result will display here: ${ client_email_sent_ok }
  % elif 'reviewer' in role_needed:
  We are waiting for the reviewer. Was the email to the reviewer sent OK? Result will display here: ${ email_sent_ok }
  % endif
 
buttons:
  - Click to refresh: refresh
---
question: Ok thanks for answering those questions! If you would like a response, please ask a reviewer to check over your information now.
fields: 
  - Request: request
---
role: reviewer
question: Results
subquestion: |
  The client asked ${ request }. Please review the attachment generated for the client and formulate your answer based on their information. Then tell us!!! What is your answer?
yesno: reviewer_response  
attachment:
  - name: Legal Aid Memo.
    filename: Memo
    description: |
      A Memo! 
    content: |
      Memo re: Qualification for Legal Aid.
    
      
      Your name is ${ user }.
      Your email is ${ client_email }.
      % if user.assets.exists:
      You indicated that you have assets.
      % endif
      % if user.annoincome.exists:
      You made ${ currency(user.annoincome) } last year.
      % endif
      % if user.mensisincome.exists:
      You made ${ currency(user.mensisincome) } last month.
      % endif
      
      % if len(cohabs) > 0: 
      
      % for j in cohabs: 
      
      You know about ${ j }. I asked if you share income with ${ j } and you said
      % if j.cohabs_share: 
      yes.
      % else: 
      no.
      % endif
      % if j.assets.exists:
      You indicated that ${ j } has assets.
      % endif
      % if j.annoincome.exists:
      ${ j } made ${ currency(j.annoincome.value) } last year.
      % endif
      % if j.mensisincome.exists:
      ${ j } made ${ currency(j.mensisincome.value) } last month.
      % endif
      
      % endfor
      
      For last year, the total income of all of the cohabitants is ${ currency(total_annoincome) }.
      
      For last month, the total income of all of the cohabitants is ${ currency(total_mensisincome) }.
      % endif
      
      % if actually_qualifies:
      It appears that based on the combination of your profile and finances, you qualify for Legal Aid.
      % else:
      It appears that based on the combination of your profile and finances, you do not qualify for Legal Aid.
      % endif
  
      % if qualifies:
      Based on your profile, you appear to qualify for Legal Aid. 
      % else:
      Based on your profile, you do not qualify for Legal Aid.
      % endif
      
      % if high_total_income:
      You do not financially qualify for Legal Aid. 
      % elif medium_total_income:
      You marginally financially qualify for Legal Aid.
      % else:
      You appear to financially qualify for Legal Aid.
      % endif
      
      % if appeal:
      Your legal matter is an appeal of a matter for which you received LAA assistance.
      % else:
      Your legal matter is not an appeal of a matter for which you received LAA assistance.
      % endif
      
      % if defined('lives_in_AB'):
      I asked if you live in Alberta. You said ${ lives_in_AB }.
      % endif
      
      % if defined('has_lawyer'):
      I asked if you have a lawyer. You said ${ has_lawyer }.
      % endif
      
      % if defined('has_acting_lawyer'):
      I asked if this lawyer is still acting for you. You said ${ has_acting_lawyer }.
      % endif
      
      % if defined('can_afford_lawyer'):
      I asked if you can afford a lawyer. You said ${ can_afford_lawyer }.
      % endif
      
      % if defined('matter_in_AB'):
      I asked if your legal matter is in Alberta. You said ${ matter_in_AB }.
      % endif
      
      % if defined('matter_is_family'):
      I asked if your matter is a family law matter. You said ${ matter_is_family }.
      % endif
      
      % if defined('matter_is_criminal'):
      I asked if your matter is a criminal law matter. You said ${ matter_is_criminal }.
      % endif
            
      Your signature ${ user.signature }
      
      Signed on ${ format_date(sig_date, format='EEEE, MMMM d, yyyy') } (${ format_date(sig_date, format="yyyy-MM-dd") })).  
---
role: 
  - client
  - reviewer
#mandatory: True
question: Results
subquestion: |
  The client said ${ request }. 
  
  The reviewer 
  % if reviewer_response:
  answered
  % else:
  did not answer
  % endif
  the question.
---
code: |
  cohabs[i].cohabs_share
  cohabs[i].complete = True
---
code: |
  if appeal or (lives_in_AB and matter_in_AB):
    resident = True
  else:
    resident = False
---
code: |
  if (has_lawyer and has_acting_lawyer) or can_afford_lawyer:
    unrepresented = False
  else:
    unrepresented = True
---
code: | 
  if matter_is_criminal or matter_is_family:
    service_provided = True
  else:
    service_provided = False
---
code: |
  if (appeal and unrepresented) or (unrepresented and resident and service_provided): 
    qualifies = True
  else:
    qualifies = False
---
code: |
  if high_total_income or not qualifies:
   actually_qualifies = False
  else:
   actually_qualifies = True
---
reconsider: true
code: |
  annobrackets = [20021,24788,35275,38134,40995,43855]
  familysize = len(cohabs) + 1
  
  if familysize > 6:
    familysize = 6
      
  max_annoincome = annobrackets[familysize-1]*1.1
  set_annoincome = annobrackets[familysize-1]
  
  mensisbrackets = [1668,2066,2940,3178,3416,3655]

  max_mensisincome = mensisbrackets[familysize-1]*1.1
  set_mensisincome = mensisbrackets[familysize-1]
  
  high_total_income = False
  medium_total_income = False
  
  if (total_annoincome > max_annoincome) or (total_mensisincome > max_mensisincome):
    high_total_income = True
   
  if (total_annoincome < max_annoincome and total_annoincome >= set_annoincome) and (total_mensisincome < max_mensisincome and total_mensisincome >= set_mensisincome):
    medium_total_income = True
---
question: Do you have a lawyer?
yesno: has_lawyer
---
question: Can you afford a lawyer?
yesno: can_afford_lawyer
---
question: Is that lawyer still acting for you?
yesno: has_acting_lawyer
---
question: Is your legal matter located in Alberta?
yesno: matter_in_AB
---
question: Do you live in Alberta?
yesno: lives_in_AB
---
question: Is your legal matter an appeal of a matter for which you received LAA assistance?
yesno: appeal
---
question: Is your legal matter a criminal law matter?
yesno: matter_is_criminal
---
question: Is your legal matter a family law matter?
yesno: matter_is_family
---
question: |
  Tell us about your financial information.
fields:
  - Do you have assets?: user.assets.exists
    datatype: yesnowide
  - What are your assets?: user.assets.value
    datatype: currency
    show if: user.assets.exists
    
  - Did you have an income last year?: user.annoincome.exists
    datatype: yesnowide
  - What was your income last year?: user.annoincome.value
    datatype: currency
    show if: user.annoincome.exists
    
  - Did you have income last month?: user.mensisincome.exists
    datatype: yesnowide
  - What was your income last month?: user.mensisincome.value
    datatype: currency
    show if: user.mensisincome.exists
---
question: Do you live with anyone?
yesno: cohabs.there_are_any
---
question: Do you live with anyone else?
yesno: cohabs.there_is_another
---
question: |
  What do you know about ${ cohabs[i] }'s finances?
fields:
  - Do you share income with this person?: cohabs[i].cohabs_share
    datatype: yesnowide
  - Do they have assets?: cohabs[i].assets.exists
    datatype: yesnowide
  - What are their assets?: cohabs[i].assets.value
    datatype: currency
    show if: cohabs[i].assets.exists
  - Did they have an income last year?: cohabs[i].annoincome.exists
    datatype: yesnowide
  - What was their income last year?: cohabs[i].annoincome.value
    datatype: currency
    show if: cohabs[i].annoincome.exists
  - Did they have income last month?: cohabs[i].mensisincome.exists
    datatype: yesnowide
  - What was their income last month?: cohabs[i].mensisincome.value
    datatype: currency
    show if: cohabs[i].mensisincome.exists
---
code: |
  total_annoincome = user.annoincome.value
  for j in cohabs:
    if j.annoincome.exists:
      total_annoincome = total_annoincome + j.annoincome.value 
---
code: | 
  total_mensisincome = user.mensisincome.value
  for j in cohabs:
    if j.mensisincome.exists:
      total_mensisincome = total_mensisincome + j.mensisincome.value 
---
question: Please sign
signature: user.signature
---
question: What is the date of signature?
fields: 
  - Signature Date: sig_date
    datatype: date